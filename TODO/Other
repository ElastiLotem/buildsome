* Removing old outputs now removes .pyc as old. But we should
  associate the .pyc with its target somehow and only remove it when
  its gone/changed?

* Failures should be cached in execution log just like successes

* If output is declared, and exists, but not registered, fail warning
  that build will overwrite user content. Use "--overwrite" to allow.

  * Deletes should always be of explicitly declared output files.

* Ban undeclared outputs from being inputs to anyone else while cmd
  ongoing, delete them after cmd

  * Need C side to verify output files do not exist before-hand to
    avoid covert channels that are then unlinked

* Remember reason in execution log and re-tell it

* Add "version number" on db format, and delete older db's?

* Bugs:
  * Wrong FS input model:
    * mode-only-inputs, (rely on mode only)
      content-only-inputs (rely on content + dirchildren but not on the stat),
      full-inputs (rely on stat + content + dirchildren)

    * When file is symlink, everything except lstat/readlink need to
      have an input dependency on the link content AND the file behind
      it

    * Only report *successful* outputs? Or perhaps report as inputs,
      output operations that failed due to FS state?

* Running "as root" is another input to the build cmd, so add "is_root" to the cmd hash?

* C-side can be given allowed outputs rules and fail anything else

* C-side can be given buildable outputs and not round-trip for other inputs

* Use mtime cache to see that outputs already match the execution log too

* Add an age to keys, and delete old ones?

* C side failures should send fail messages to server, which is the
  only way to fail the job reliably
